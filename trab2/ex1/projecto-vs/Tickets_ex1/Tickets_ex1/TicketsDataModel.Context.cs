//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tickets_ex1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TicketsEntities : DbContext
    {
        public TicketsEntities()
            : base("name=TicketsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Request> Requests { get; set; }
        public virtual DbSet<Step> Steps { get; set; }
        public virtual DbSet<Technician> Technicians { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<Ticket_Action> Ticket_Action { get; set; }
        public virtual DbSet<Ticket_Log> Ticket_Log { get; set; }
        public virtual DbSet<Ticket_Type> Ticket_Type { get; set; }
        public virtual DbSet<Ticket_User> Ticket_User { get; set; }
        public virtual DbSet<vi_Request> vi_Request { get; set; }
        public virtual DbSet<vi_Ticket> vi_Ticket { get; set; }
        public virtual DbSet<vi_Ticket_Action> vi_Ticket_Action { get; set; }
        public virtual DbSet<vi_Ticket_Log> vi_Ticket_Log { get; set; }
    
        [DbFunction("TicketsEntities", "func_Get_Most_Priority_Tickets")]
        public virtual IQueryable<func_Get_Most_Priority_Tickets_Result> func_Get_Most_Priority_Tickets(Nullable<int> n)
        {
            var nParameter = n.HasValue ?
                new ObjectParameter("n", n) :
                new ObjectParameter("n", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_Get_Most_Priority_Tickets_Result>("[TicketsEntities].[func_Get_Most_Priority_Tickets](@n)", nParameter);
        }
    
        public virtual ObjectResult<proc_Get_Ticket_Info_Result> proc_Get_Ticket_Info(string cod)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Ticket_Info_Result>("proc_Get_Ticket_Info", codParameter);
        }
    
        public virtual int sp_Answer_Ticket_Request(Nullable<int> orderNumber, string ticket, Nullable<int> technician, string response)
        {
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(int));
    
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            var technicianParameter = technician.HasValue ?
                new ObjectParameter("technician", technician) :
                new ObjectParameter("technician", typeof(int));
    
            var responseParameter = response != null ?
                new ObjectParameter("response", response) :
                new ObjectParameter("response", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Answer_Ticket_Request", orderNumberParameter, ticketParameter, technicianParameter, responseParameter);
        }
    
        public virtual int sp_Assign_Technician_To_Tickets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Assign_Technician_To_Tickets");
        }
    
        public virtual int sp_Assign_Type_To_Ticket(string ticket, string ticketType, Nullable<int> technician)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("ticketType", ticketType) :
                new ObjectParameter("ticketType", typeof(string));
    
            var technicianParameter = technician.HasValue ?
                new ObjectParameter("technician", technician) :
                new ObjectParameter("technician", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Assign_Type_To_Ticket", ticketParameter, ticketTypeParameter, technicianParameter);
        }
    
        public virtual int sp_Close_Ticket(string ticket, Nullable<int> technician)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            var technicianParameter = technician.HasValue ?
                new ObjectParameter("technician", technician) :
                new ObjectParameter("technician", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Close_Ticket", ticketParameter, technicianParameter);
        }
    
        public virtual int sp_Delete_Technician(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Delete_Technician", emailParameter);
        }
    
        public virtual int sp_Delete_Ticket(string cod)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Delete_Ticket", codParameter);
        }
    
        public virtual int sp_Delete_Ticket_User(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Delete_Ticket_User", emailParameter);
        }
    
        public virtual int sp_End_Ticket_Action(Nullable<int> orderNumber, string ticket)
        {
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(int));
    
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_End_Ticket_Action", orderNumberParameter, ticketParameter);
        }
    
        public virtual int sp_Increate_Ticket_Priority(string ticket)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Increate_Ticket_Priority", ticketParameter);
        }
    
        public virtual int sp_Insert_Step(string ticketType, string description)
        {
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("ticketType", ticketType) :
                new ObjectParameter("ticketType", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert_Step", ticketTypeParameter, descriptionParameter);
        }
    
        public virtual int sp_Insert_Technician(string email, string name)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert_Technician", emailParameter, nameParameter);
        }
    
        public virtual ObjectResult<sp_Insert_Ticket_Result> sp_Insert_Ticket(string cod, string ticketDescription, string ticketUser)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            var ticketDescriptionParameter = ticketDescription != null ?
                new ObjectParameter("ticketDescription", ticketDescription) :
                new ObjectParameter("ticketDescription", typeof(string));
    
            var ticketUserParameter = ticketUser != null ?
                new ObjectParameter("ticketUser", ticketUser) :
                new ObjectParameter("ticketUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Insert_Ticket_Result>("sp_Insert_Ticket", codParameter, ticketDescriptionParameter, ticketUserParameter);
        }
    
        public virtual int sp_Insert_Ticket_Action(string ticket, Nullable<int> technician, string stepTicketType, Nullable<int> stepOrderNumber, string note, ObjectParameter orderNumber)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            var technicianParameter = technician.HasValue ?
                new ObjectParameter("technician", technician) :
                new ObjectParameter("technician", typeof(int));
    
            var stepTicketTypeParameter = stepTicketType != null ?
                new ObjectParameter("stepTicketType", stepTicketType) :
                new ObjectParameter("stepTicketType", typeof(string));
    
            var stepOrderNumberParameter = stepOrderNumber.HasValue ?
                new ObjectParameter("stepOrderNumber", stepOrderNumber) :
                new ObjectParameter("stepOrderNumber", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert_Ticket_Action", ticketParameter, technicianParameter, stepTicketTypeParameter, stepOrderNumberParameter, noteParameter, orderNumber);
        }
    
        public virtual int sp_Insert_Ticket_Log(string ticket, string sqlCommand, Nullable<int> technician)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            var sqlCommandParameter = sqlCommand != null ?
                new ObjectParameter("sqlCommand", sqlCommand) :
                new ObjectParameter("sqlCommand", typeof(string));
    
            var technicianParameter = technician.HasValue ?
                new ObjectParameter("technician", technician) :
                new ObjectParameter("technician", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert_Ticket_Log", ticketParameter, sqlCommandParameter, technicianParameter);
        }
    
        public virtual int sp_Insert_Ticket_Type(string id, string name)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert_Ticket_Type", idParameter, nameParameter);
        }
    
        public virtual int sp_Insert_Ticket_User(string email, string name)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert_Ticket_User", emailParameter, nameParameter);
        }
    
        public virtual ObjectResult<sp_List_Ticket_Actions_Result> sp_List_Ticket_Actions(string ticket)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_List_Ticket_Actions_Result>("sp_List_Ticket_Actions", ticketParameter);
        }
    
        public virtual ObjectResult<sp_List_Ticket_Requests_Result> sp_List_Ticket_Requests(string ticket)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_List_Ticket_Requests_Result>("sp_List_Ticket_Requests", ticketParameter);
        }
    
        public virtual ObjectResult<sp_List_Tickets_By_Date_Result> sp_List_Tickets_By_Date()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_List_Tickets_By_Date_Result>("sp_List_Tickets_By_Date");
        }
    
        public virtual ObjectResult<sp_List_Tickets_By_Priority_Result> sp_List_Tickets_By_Priority()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_List_Tickets_By_Priority_Result>("sp_List_Tickets_By_Priority");
        }
    
        public virtual ObjectResult<sp_List_Tickets_By_State_Result> sp_List_Tickets_By_State()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_List_Tickets_By_State_Result>("sp_List_Tickets_By_State");
        }
    
        public virtual ObjectResult<sp_List_Tickets_By_Type_Result> sp_List_Tickets_By_Type()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_List_Tickets_By_Type_Result>("sp_List_Tickets_By_Type");
        }
    
        public virtual int sp_Request_Ticket_Info(string ticketUser, string ticket)
        {
            var ticketUserParameter = ticketUser != null ?
                new ObjectParameter("ticketUser", ticketUser) :
                new ObjectParameter("ticketUser", typeof(string));
    
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Request_Ticket_Info", ticketUserParameter, ticketParameter);
        }
    
        public virtual int sp_Update_Technician(string email, string name, string newEmail, string newName)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var newEmailParameter = newEmail != null ?
                new ObjectParameter("newEmail", newEmail) :
                new ObjectParameter("newEmail", typeof(string));
    
            var newNameParameter = newName != null ?
                new ObjectParameter("newName", newName) :
                new ObjectParameter("newName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Technician", emailParameter, nameParameter, newEmailParameter, newNameParameter);
        }
    
        public virtual int sp_Update_Ticket_Priority(string ticket, Nullable<int> technician, string newPriority)
        {
            var ticketParameter = ticket != null ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(string));
    
            var technicianParameter = technician.HasValue ?
                new ObjectParameter("technician", technician) :
                new ObjectParameter("technician", typeof(int));
    
            var newPriorityParameter = newPriority != null ?
                new ObjectParameter("newPriority", newPriority) :
                new ObjectParameter("newPriority", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Ticket_Priority", ticketParameter, technicianParameter, newPriorityParameter);
        }
    
        public virtual int sp_Update_Ticket_User(string email, string name, string newEmail, string newName)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var newEmailParameter = newEmail != null ?
                new ObjectParameter("newEmail", newEmail) :
                new ObjectParameter("newEmail", typeof(string));
    
            var newNameParameter = newName != null ?
                new ObjectParameter("newName", newName) :
                new ObjectParameter("newName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Ticket_User", emailParameter, nameParameter, newEmailParameter, newNameParameter);
        }
    
        public virtual ObjectResult<proc_Get_Ticket_Steps_Result> proc_Get_Ticket_Steps(string cod)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Get_Ticket_Steps_Result>("proc_Get_Ticket_Steps", codParameter);
        }
    
        public virtual int proc_Assign_Technician(Nullable<int> tech_num, ObjectParameter cod)
        {
            var tech_numParameter = tech_num.HasValue ?
                new ObjectParameter("tech_num", tech_num) :
                new ObjectParameter("tech_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Assign_Technician", tech_numParameter, cod);
        }
    
        public virtual int proc_Remove_Ticket(string cod, ObjectParameter res)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Remove_Ticket", codParameter, res);
        }
    }
}
